name: Build

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  pull-requests: write

jobs:
  build-client:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows, macos]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - run: npm ci

      - run: npm run build

      - run: npm run test

      - run: |
          RUN_ID=$(gh run list --commit=${{ github.event.pull_request.head.sha || github.sha }} --workflow=zos-build.yml --status=in_progress --json=databaseId --jq='.[0].databaseId')
          [ -z "$RUN_ID" ] || gh run watch $RUN_ID
        if: ${{ matrix.os == 'ubuntu' }}
        env:
          GH_TOKEN: ${{ github.token }}

      - run: |
          gh run download --name zowe-server-bin
          mkdir packages/cli/bin && cp checksums.asc server.pax.Z packages/cli/bin/
          mkdir packages/vsce/bin && cp checksums.asc server.pax.Z packages/vsce/bin/
        env:
          GH_TOKEN: ${{ github.token }}
        shell: bash

      - run: npm run package

      - uses: actions/upload-artifact@v4
        id: cli-artifact-upload
        if: ${{ matrix.os == 'ubuntu' }}
        with:
          name: zowe-native-proto-cli
          path: dist/*.tgz

      - uses: actions/upload-artifact@v4
        id: vsce-artifact-upload
        if: ${{ matrix.os == 'ubuntu' }}
        with:
          name: zowe-native-proto-vsce
          path: dist/*.vsix

      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' && matrix.os == 'ubuntu' && github.event.pull_request.head.repo.full_name == github.repository }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Client artifacts
          number: ${{ github.event.pull_request.number }}
          message: |
            Client artifacts:
             - CLI Plug-in: ${{ steps.cli-artifact-upload.outputs.artifact-url }}
             - VSCode Extension: ${{ steps.vsce-artifact-upload.outputs.artifact-url }}

  build-native:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: cd native/golang && go build
