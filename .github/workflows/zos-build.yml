name: z/OS Build

on:
  pull_request:
    paths:
      - ".github/workflows/zos-build.yml"
      - "native/**"
  push:
    branches:
      - main

permissions:
  pull-requests: write

jobs:
  build-server:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Set up Credentials
        run: |
          cat << EOF > config.yaml
          activeProfile: default

          profiles:
            default:
              sshProfile:
                host: ${{ secrets.SSH_MARIST_RACF_HOST }}
                port: 65522
                user: "${{ secrets.SSH_MARIST_USERNAME }}"
                password: "${{ secrets.SSH_MARIST_RACF_PASSWORD }}"
              deployDir: "/ZOWE/tmp/zowe-native-proto"
              goBuildEnv: 'GOPATH=/ZOWE/tmp/go-pkg GOCACHE=/ZOWE/tmp/.go-cache GOINSECURE="*" GOTMPDIR=/ZOWE/tmp'
              preBuildCmd: ". ~/.custom_profile"
          EOF

      - name: Install Dependencies
        run: npm ci --workspaces=false

      - name: Build on z/OS
        uses: nick-fields/retry@v3
        with:
          command: npm run z:all
          max_attempts: 3
          retry_on_exit_code: 11 # Ignore transient SIGSEGV error on Go build
          timeout_minutes: 10

      - uses: actions/upload-artifact@v4
        with:
          name: zowe-server-bin
          path: packages/cli/bin/*

      - uses: actions/upload-artifact@v4
        id: pax-artifact-upload
        with:
          name: zowe-server-release
          path: dist/server.pax.Z

      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Server artifacts
          number: ${{ github.event.pull_request.number }}
          message: |
            Server artifacts:
             - PAX: ${{ steps.pax-artifact-upload.outputs.artifact-url }}

      - name: Clean up on z/OS
        if: always()
        run: npm run z:delete
