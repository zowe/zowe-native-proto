name: Release

on:
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:
    inputs:
      version:
        description: Version number to publish (e.g., 1.0.0)
        required: false
        type: string
      dry-run:
        description: Dry run mode
        required: false
        type: boolean

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    if: ${{ inputs.version }}
    uses: ./.github/workflows/zos-build.yml
    with:
      version: ${{ inputs.version }}
    secrets: inherit

  release:
    runs-on: ubuntu-latest
    needs: build
    if: always() && (needs.build.result == 'success' || needs.build.result == 'skipped')

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
          ref: ${{ github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_ENV_1: ${{ secrets.JF_ARTIFACTORY_TOKEN }}

      - name: Install Dependencies
        run: npm ci

      - name: Build Source
        run: npm run build

      - name: Set Environment
        run: |
          RUN_ID=$([ -z "${{ inputs.version }}" ] && \
            gh run list --branch=${{ github.ref }} --workflow=zos-build.yml --limit=1 --json=databaseId --jq='.[0].databaseId' || \
            echo "${{ github.run_id }}")
          DATESTAMP=$(date +"%Y-%m-%d-%H%M%S")
          NEW_VERSION=$([ -z "${{ inputs.version }}" ] && jq -r '.version' package.json || echo "${{ inputs.version }}")
          NEW_VERSION_SUFFIX=$([ -z "${{ inputs.version }}" ] && echo "$NEW_VERSION-$DATESTAMP" || echo "$NEW_VERSION")
          TRAIN=$([ -z "${{ inputs.version }}"] && echo "Nightly" || echo "Release")
          echo "RUN_ID=$(echo $RUN_ID)" >> $GITHUB_ENV
          echo "NEW_VERSION_SUFFIX=$(echo $NEW_VERSION_SUFFIX)" >> $GITHUB_ENV
          echo "TRAIN=$(echo $TRAIN)" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Download Server
        run: |
          gh run download $RUN_ID --name zowe-server-bin
          node scripts/moveArtifacts.js
          gh run download $RUN_ID --name zowe-server-release
          mkdir dist && mv server.pax.Z dist/zowe-server-${NEW_VERSION_SUFFIX}.pax.Z
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Run Octorelease
        if: ${{ env.TRAIN == 'Release' }}
        uses: zowe-actions/octorelease@v1
        env:
          GIT_COMMITTER_NAME: ${{ secrets.ZOWE_ROBOT_USER }}
          GIT_COMMITTER_EMAIL: ${{ secrets.ZOWE_ROBOT_EMAIL }}
          GIT_CREDENTIALS: x-access-token:${{ secrets.ZOWE_ROBOT_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-dir: .github
          dry-run: ${{ inputs.dry-run }}
          new-version: ${{ inputs.version }}

      - name: Run NPM Package
        if: ${{ env.TRAIN == 'Nightly'}}
        run: npm run package

      - name: Publish Snapshot to Artifactory
        if: ${{ !inputs.dry-run && env.TRAIN == 'Nightly' }}
        run: |
          jfrog rt u --detailed-summary dist/*.tgz libs-snapshot-local/org/zowe/zowe-native-proto/CLI/$TRAIN/zowe-native-proto-cli-$NEW_VERSION_SUFFIX.tgz
          jfrog rt u --detailed-summary dist/*.vsix libs-snapshot-local/org/zowe/zowe-native-proto/VSCode/$TRAIN/zowe-native-proto-vsce-$NEW_VERSION_SUFFIX.vsix
          jfrog rt u --detailed-summary dist/*.pax.Z libs-snapshot-local/org/zowe/zowe-native-proto/Server/$TRAIN/zowe-server-$NEW_VERSION_SUFFIX.pax.Z

      - name: Publish Release to Artifactory
        if: ${{ !inputs.dry-run && env.TRAIN == 'Release' }}
        run: |
          jfrog rt u --detailed-summary dist/*.tgz libs-release-local/org/zowe/zowe-native-proto/$NEW_VERSION_SUFFIX/zowe-native-proto-cli-$NEW_VERSION_SUFFIX.tgz
          jfrog rt u --detailed-summary dist/*.vsix libs-release-local/org/zowe/zowe-native-proto/$NEW_VERSION_SUFFIX/zowe-native-proto-vsce-$NEW_VERSION_SUFFIX.vsix
          jfrog rt u --detailed-summary dist/*.pax.Z libs-release-local/org/zowe/zowe-native-proto/$NEW_VERSION_SUFFIX/zowe-server-$NEW_VERSION_SUFFIX.pax.Z
